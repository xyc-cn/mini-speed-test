{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/tool.js","webpack:///./src/util/pool.js","webpack:///./src/node/element.js","webpack:///./src/event/event-target.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/bom/location.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/tree/query-selector.js","webpack:///./src/node/style-list.js","webpack:///./src/tree/parser.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js","webpack:///./src/bom/cookie.js","webpack:///./src/bom/navigator.js","webpack:///./src/bom/screen.js","webpack:///./src/bom/history.js","webpack:///./src/bom/miniprogram.js","webpack:///./src/bom/storage.js","webpack:///./src/bom/worker.js","webpack:///./src/bom/performance.js","webpack:///./src/bom/xml-http-request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","cache","WX_COMPONENT_MAP","forEach","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","checkIsWxComponent","tagName","notNeedPrefix","hasPrefix","indexOf","slice","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","pluginMatchRes","match","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","console","error","flushThrottleCache","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","origin","decodeContent","content","isTagNameSupport","escapeForHtmlGeneration","setData","instance","data","_startInit","_iniCount","$$trigger","size","this","$_size","$_cache","length","push","pop","Node","ClassList","Style","Attribute","parser","tool","pool","Element","tree","optimization","elementMultiplexing","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_unary","voidMap","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","_wxComponent","_wxCustomComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$_triggerWindowUpdate","$_pageId","node","isRemove","id","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","TEXT_NODE","textContent","html","behavior","className","styleText","style","cssText","src","dataset","$$dealWithAttrsForGenerateHtml","$$isUnary","childrenHtml","$_generateHtml","join","children","attrsMap","attr","element","ownerDocument","$$createElement","$_generateDomTree","appendChild","$$createTextNode","createComment","$$pageId","$_type","slot","getAttribute","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","Error","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","args","wxComponent","$$wxCustomComponent","scrollSource","animate","clearAnimation","trim","oldId","getById","toString","$$parse","filter","fragment","DOCUMENT_FRAGMENT_NODE","ast","parse","err","item","$$updateParent","hasTbody","tbody","concat","assign","$$dealWithAttrsForOuterHTML","text","list","parseInt","pageScrollTo","scrollTop","duration","deep","newNode","class","$$dealWithAttrsForCloneNode","attrName","cloneNode","nodes","hasUpdate","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","Array","isArray","JSON","oldValue","oldKeys","removeAttribute","handler","removeEventListener","addEventListener","remove","namespace","warn","hasAttribute","otherElement","stack","checkElement","left","top","Event","CustomEvent","compareTouchList","a","b","len","aItem","bItem","identifier","pageX","pageY","clientX","clientY","EventTarget","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","target","eventName","miniprogramEvent","extra","callback","event","$$setTarget","path","defaultView","timeStamp","performance","now","touches","changedTouches","bubbles","$$extra","detail","currentTarget","$$canBubble","$$setCurrentTarget","$$setEventPhase","CAPTURING_PHASE","isCapture","AT_TARGET","isTarget","BUBBLING_PHASE","stopPropagation","NONE","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","eventPhase","$$immediateStop","$$triggerWindowError","_namespace","namespaceHandlers","last","flag","$$namespace","bubbleHandlers","captureHandlers","evt","$$process","$_name","$_target","$_timeStamp","$_currentTarget","$_eventPhase","$_detail","$_immediateStop","$_canBubble","$_bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","touch","$$checkTargetTouches","node1","node2","checkRelation","$_parentNode","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","Location","$_pageRoute","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_lastHash","$_lastPathname","$_lastSearch","$_lastHref","$_allowCheck","protocol","hostname","port","pathname","search","hash","$$startCheckHash","test","oldValues","$_getOldValues","$$endCheckHash","$_checkUrl","href","jumpUrl","matchRoute","$$miniprogram","getMatchRoute","param","encodeURIComponent","callMethod","isTabBarPage","parseRes","host","hostStart","hostEnd","isEnd","char","charCodeAt","searchIndex","hashIndex","firstIndex","needCheckUrlChange","oldURL","newURL","$_enterHistory","isFinite","$_setHrefWithoutEnterHistory","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","Cookie","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_COMPONENT_TRANSFORM_LIST","WX_CUSTOM_COMPONENT_MAP","transformWxComponent2Dom","wxComponentName","groupEvent","$$isGroup","stopImmediatePropagation","querySelectorAll","checked","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","$_cookie","$_config","$_node","$_head","createElement","root","$$children","cookie","getStorageSync","$$cookieInstance","deserialize","URL","$_visibilityState","documentElement","originTagName","constructorClass","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","location","setCookie","$$createComment","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","rules","rule","$_checkUpdate","properties","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","Navigator","Screen","History","Miniprogram","SessionStorage","LocalStorage","WorkerImpl","Performance","OriginalXMLHttpRequest","lastRafTime","WINDOW_PROTOTYPE_MAP","navigator","screen","history","localStorage","sessionStorage","XMLHttpRequest","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","noop","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_location","$_navigator","$_screen","$_history","$_miniprogram","$_localStorage","$_sessionStorage","$_performance","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","$_xmlHttpRequestConstructor","generate","worker","$_workerConstructor","Worker","$_sharedWorkerConstructor","SharedWorker","HTMLIFrameElement","state","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$$reset","descriptor","main","sub","method","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Number","Boolean","String","parseFloat","pixelRatio","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","QuerySelector","walkDomTree","tagMap","classMap","idMap","querySelector","walk","childNode","findNode","PSEUDO_CHECK","selected","disabled","enabled","ATTR_CHECK","nodeVal","val","KINSHIP_CHECK","kinshipRule","kinshipNode","checkHit","foundCurrent","tag","pseudo","contains","checkPseudo","opr","checkAttr","parseCache","parseCacheKeys","regexp","shift","segment","onProcess","idAll","tagAll","classAll","pseudoAll","pseudoName","pseudoParam","attrAll","attrOpr","attrVal","kinshipAll","kinship","currentRule","nthParsed","lastParse","getParseCache","setParseCache","lastRule","hitNodes","classNodes","classNode","tagNodes","tagNode","checkNode","isMatched","j","prevRule","checkKinship","unique","sort","aList","bList","aParent","bParent","unshift","doctypeReg","startTagReg","endTagReg","attrReg","blockMap","inlineMap","rawTextMap","longAttributeCache","tokenize","isText","execRes","parseEndTag","comment","parseStartTag","indexStart","indexEnd","rest","$2","$3","$4","pos","end","HTMLAnchorElement","$_naturalWidth","$_naturalHeight","$_initRect","widthNum","isNaN","heightNum","rect","getImageInfo","success","$_resetRect","fail","HTMLInputElement","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","createPath2D","createImage","createImageData","requestAnimationFrame","cancelAnimationFrame","toDataURL","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","option","find","$$setAttributeWithoutUpdate","findIndex","HTMLOptionElement","label","onDealWithNotSupportDom","scrollItem","getElementById","propName","$$getBoundingClientRect","rectName","scrollRect","itemRect","$_behavior","realName","$_pageName","cookieStr","parseKeyValue","domain","expires","maxAge","secure","httpOnly","cookieDomain","cookiePath","createTime","$_checkDomain","lastIndex","lastIndexOf","cookieKey","oldCookie","$_checkExpires","setStorage","serialize","includeHttpOnly","domainList","domainItem","domainMap","pathList","pathItem","$_checkPath","pathMap","gap","stringify","log","$_language","$_wxVersion","$_brand","$_model","$_platform","$_system","$_userAgent","language","version","brand","model","platform","system","platformContext","systemVersion","appCodeName","$_width","$_height","$_stack","title","$_currentIndex","current","go","next","$$setHrefWithoutCheck","reload","$_checkOrigin","setNavigationBarTitle","pageUrlRouteMap","$_pageUrl","$_subpackagesMap","entry","router","subpackagesMap","regexpList","pathObj","packageName","matchRes","tabBarMap","Storage","$_keys","newValue","currentWindow","storageArea","num","$_triggerStorage","getStorageInfoSync","$$keys","setStorageSync","$_updateInfo","removeStorageSync","clearStorageSync","wxWorker","wxWorkerPath","callbackList","sharedWorkerInstCount","workerMap","sharedWorkerMap","getWorkerUrl","fileName","getWorkersDir","isSharedWorker","filePath","$_tryCatch","createWorker","$_onMessage","_hasRegisterCb","onMessage","postMessage","terminate","$_worker","close","sharedWorker","$_timeOrigin","SUPPORT_METHOD","STATUS_TEXT_MAP","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","500","501","502","503","504","505","$_method","$_url","$_data","$_status","$_statusText","$_readyState","UNSENT","$_header","Accept","$_responseType","$_resHeader","$_response","$_timeout","$_startTime","$_withCredentials","$_requestTask","$_requestSuccess","$_requestFail","$_requestComplete","readyState","hasChange","DONE","abort","$_callReadyStateChange","OPENED","header","$$cookie","withCredentials","request","dataType","responseType","complete","statusCode","HEADERS_RECEIVED","$$setCookie","LOADING","errMsg","timeout","$_callRequest"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","const cache = require('./cache')\n\n/**\n * 判断是否是内置组件\n */\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'page-container', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video', 'voip-room',\n    'map',\n    'canvas',\n    'ad', 'ad-custom', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const pluginMatchRes = pageRoute.match(/(?:^|\\/)__plugin__\\/(?:.*?)(\\/.*)/)\n    if (pluginMatchRes && pluginMatchRes[1]) {\n        // 插件页面的 route 需要特殊处理\n        pageRoute = pluginMatchRes[1]\n    }\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(console.error)\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\n/**\n * setData 封装\n */\nfunction setData(instance, data) {\n    const pageId = instance.pageId\n    const window = pageId ? cache.getWindow(pageId) : null\n    if (window && window._startInit) {\n        // 统计 init 阶段的 setData\n        window._iniCount++\n        instance.setData(data, () => {\n            window._iniCount--\n            if (!window._startInit && window._iniCount <= 0) {\n                // 回调全部回来了\n                window.document.$$trigger('DOMContentLoaded')\n                window._iniCount = 0\n            }\n        })\n        return\n    }\n\n    // 普通 setData\n    instance.setData(data)\n}\n\nmodule.exports = {\n    checkIsWxComponent,\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n    setData,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst parser = require('../tree/parser')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_unary = !!parser.voidMap[this.$_tagName.toLowerCase()]\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n        this._wxCustomComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) {\n            this.parentNode.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) {\n            this.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n    }\n\n    /**\n     * 触发全局更新事件\n     */\n    $_triggerWindowUpdate() {\n        const window = cache.getWindow(this.$_pageId)\n        window.$$trigger('$$domTreeUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 遍历 dom 树，生成 html\n     */\n    $_generateHtml(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            // 文本节点\n            return node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            // 元素\n            const tagName = node.tagName.toLowerCase()\n            let html = `<${tagName}`\n\n            // 属性\n            if (node.behavior) html += ` behavior=\"${tool.escapeForHtmlGeneration(node.behavior)}\"`\n            if (node.id) html += ` id=\"${tool.escapeForHtmlGeneration(node.id)}\"`\n            if (node.className) html += ` class=\"${tool.escapeForHtmlGeneration(node.className)}\"`\n\n            const styleText = node.style.cssText\n            if (styleText) html += ` style=\"${tool.escapeForHtmlGeneration(styleText)}\"`\n\n            const src = node.src\n            if (src) html += ` src=${tool.escapeForHtmlGeneration(src)}`\n\n            const dataset = node.dataset\n            Object.keys(dataset).forEach(name => {\n                html += ` data-${tool.toDash(name)}=\"${tool.escapeForHtmlGeneration(dataset[name])}\"`\n            })\n\n            html = this.$$dealWithAttrsForGenerateHtml(html, node)\n\n            if (node.$$isUnary) {\n                // 空标签\n                return `${html} />`\n            } else {\n                const childrenHtml = node.childNodes.map(child => this.$_generateHtml(child)).join('')\n                return `${html}>${childrenHtml}</${tagName}>`\n            }\n        }\n    }\n\n    /**\n     * 遍历 ast，生成 dom 树\n     */\n    $_generateDomTree(node) {\n        const {\n            type,\n            tagName = '',\n            attrs = [],\n            children = [],\n            content = '',\n        } = node\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n\n        if (type === 'element') {\n            // 元素\n            const attrsMap = {}\n\n            // 属性列表转化成 map\n            for (const attr of attrs) {\n                const name = attr.name\n                let value = attr.value\n\n                if (name === 'style') value = value && value.replace('\"', '\\'') || ''\n\n                attrsMap[name] = value\n            }\n\n            const element = this.ownerDocument.$$createElement({\n                tagName, attrs: attrsMap, nodeId\n            })\n\n            for (let child of children) {\n                child = this.$_generateDomTree(child)\n\n                if (child) element.appendChild(child)\n            }\n\n            return element\n        } else if (type === 'text') {\n            // 文本\n            return this.ownerDocument.$$createTextNode({\n                content: tool.decodeContent(content), nodeId\n            })\n        } else if (type === 'comment') {\n            // 注释\n            return this.ownerDocument.createComment()\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n            slot: this.getAttribute('slot'),\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 如果该节点是第三方自定义组件，返回对应的实例\n     */\n    get $$wxCustomComponent() {\n        return this._wxCustomComponent\n    }\n\n    /**\n     * 获取子节点列表\n     */\n    get $$children() {\n        return this.$_children\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject(new Error('body not found in webview')))).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject(new Error('element not found in webview')))).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 关键帧/滚动驱动动画接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$animate(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.animate(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 关键帧/滚动驱动动画清除接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$clearAnimation(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.clearAnimation(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerHTML() {\n        return this.$_children.map(child => this.$_generateHtml(child)).join('')\n    }\n\n    set innerHTML(html) {\n        if (typeof html !== 'string') return\n\n        const fragment = this.ownerDocument.$$createElement({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        })\n\n        // 解析成 ast\n        let ast = null\n        try {\n            ast = parser.parse(html)\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (!ast) return\n\n        // 生成 dom 树\n        ast.forEach(item => {\n            const node = this.$_generateDomTree(item)\n            if (node) fragment.appendChild(node)\n        })\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 追加新子节点\n        if (this.$_tagName === 'table') {\n            // table 节点需要判断是否存在 tbody\n            let hasTbody = false\n\n            for (const child of fragment.childNodes) {\n                if (child.tagName === 'TBODY') {\n                    hasTbody = true\n                    break\n                }\n            }\n\n            if (!hasTbody) {\n                const tbody = this.ownerDocument.$$createElement({\n                    tagName: 'tbody',\n                    attrs: {},\n                    nodeType: Node.ELEMENT_NODE,\n                    nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                })\n\n                tbody.appendChild(fragment)\n                this.appendChild(tbody)\n            }\n        } else {\n            this.appendChild(fragment)\n        }\n    }\n\n    get outerHTML() {\n        return this.$_generateHtml(this)\n    }\n\n    set outerHTML(html) {\n        if (typeof html !== 'string') return\n\n        // 解析成 ast，只取第一个作为当前节点\n        let ast = null\n        try {\n            ast = parser.parse(html)[0]\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (ast) {\n            // 生成 dom 树\n            const node = this.$_generateDomTree(ast)\n\n            // 删除所有子节点\n            this.$_children.forEach(node => {\n                node.$$updateParent(null)\n\n                // 更新映射表\n                this.$_updateChildrenExtra(node, true)\n            })\n            this.$_children.length = 0\n\n            this.$_notTriggerUpdate = true // 先不触发更新\n\n            // 追加新子节点\n            const children = [].concat(node.childNodes)\n            for (const child of children) {\n                this.appendChild(child)\n            }\n\n            this.$_tagName = node.tagName.toLowerCase()\n            this.id = node.id || ''\n            this.className = node.className || ''\n            this.style.cssText = node.style.cssText || ''\n            this.src = node.src || ''\n            this.$_dataset = Object.assign({}, node.dataset)\n\n            this.$$dealWithAttrsForOuterHTML(node)\n\n            this.$_notTriggerUpdate = false // 重启触发更新\n            this.$_triggerParentUpdate()\n        }\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        // 属性\n        if (this.$__attrs) {\n            const attrsMap = this.$_attrs.map\n            Object.keys(attrsMap).forEach(attrName => newNode.setAttribute(attrName, attrsMap[attrName]))\n        }\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        if (!nodes.length) hasUpdate = true // 列表为空也要触发 update，因为可能走 innerHTML 强行置空\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return this\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && valueType !== 'function' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'kbone-attribute-map' || name === 'kbone-event-map') {\n            value = value || {}\n            if (typeof value === 'string') value = JSON.parse(value) // 确保存入的是对象\n            const oldValue = this.getAttribute(name)\n            const keys = Object.keys(value)\n            const oldKeys = oldValue ? Object.keys(oldValue) : null\n\n            if (name === 'kbone-attribute-map') {\n                // 特殊属性，用于批量设置属性\n                keys.forEach(key => this.setAttribute(key, value[key]))\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(value, key)) this.removeAttribute(key)\n                    })\n                }\n            } else {\n                // 特殊属性，用于批量监听事件\n                const window = cache.getWindow(this.$_pageId)\n\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        // 先删除所有旧的 handler\n                        let handler = oldValue[key]\n                        handler = typeof handler !== 'function' ? window[handler] : handler\n                        this.removeEventListener(key, handler)\n                    })\n                }\n                keys.forEach(key => {\n                    let handler = value[key]\n                    handler = typeof handler !== 'function' ? window[handler] : handler\n                    this.addEventListener(key, handler)\n                })\n            }\n        }\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (name.indexOf('data-') === 0) {\n            // dataset 属性\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!this.$__dataset) return undefined\n\n            return this.dataset[datasetName]\n        } else {\n            if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n            return this.$_attrs.get(name)\n        }\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        // 不作任何实现，只作兼容使用\n        console.warn('getBoundingClientRect is not supported, please use dom.$$getBoundingClientRect instead of it')\n        return {\n            left: 0,\n            top: 0,\n        }\n    }\n}\n\nmodule.exports = Element\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n            event.$$setTarget(target)\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            const document = target.ownerDocument\n            const window = document ? document.defaultView : null\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: window ? window.performance.now() : miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n            // 保留原始事件的 detail\n            if (miniprogramEvent.detail) event.detail = Object.assign({}, miniprogramEvent.detail, event.detail || {})\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if (!event) {\n            const document = this.ownerDocument\n            const window = document ? document.defaultView : null\n            event = new Event({\n                timeStamp: window ? window.performance.now() : Date.now(),\n                touches: [],\n                changedTouches: [],\n                name: eventName,\n                target: this,\n                eventPhase: Event.AT_TARGET,\n            })\n        }\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n                this.$$triggerWindowError(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            handlers.forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                    this.$$triggerWindowError(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers) {\n                    namespaceHandlers.forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                            this.$$triggerWindowError(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 触发 window error 事件\n     */\n    $$triggerWindowError(err) {\n        const document = this.ownerDocument\n        const window = document ? document.defaultView : null\n        if (window) {\n            window.$$trigger('error', {\n                event: err,\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_cancelable = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","/**\n * 暂不对 ipv6 地址做支持\n */\nconst EventTarget = require('../event/event-target')\nconst tool = require('../util/tool')\nconst cache = require('../util/cache')\n\nclass Location extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_pageRoute = tool.getPageRoute(pageId) // 小程序页面路由\n\n        this.$_protocol = 'https:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n        this.$_allowCheck = true // 是否检查 url 和 hash 变化\n    }\n\n    /**\n     * 获取 url 中旧的需要进行检测的部分\n     */\n    $_getOldValues() {\n        return {\n            protocol: this.$_protocol,\n            hostname: this.$_hostname,\n            port: this.$_port,\n            pathname: this.$_pathname,\n            search: this.$_search,\n            hash: this.$_hash,\n        }\n    }\n\n    /**\n     * 设置 href，不进入 history\n     */\n    $_setHrefWithoutEnterHistory(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) {\n            // 没有带协议\n            if (value.indexOf('/') === 0) {\n                // 以 / 开头，直接替换整个 pathname、search、hash\n                value = `${this.origin}${value}`\n            } else if (value.indexOf('#') === 0) {\n                // 以 # 开头，直接替换整个 hash\n                value = `${this.origin}${this.$_pathname}${this.$_search}${value}`\n            } else {\n                // 非以 / 开头，则替换 pathname 的最后一段、search、hash\n                let pathname = this.$_pathname.split('/')\n                pathname.pop()\n                pathname = pathname.join('/')\n\n                value = `${this.origin}${pathname}/${value}`\n            }\n        }\n\n        const {\n            protocol, hostname, port, hash, search, pathname\n        } = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n\n        this.$$endCheckHash()\n        this.$_checkUrl(oldValues)\n    }\n\n    /**\n     * 进入 history\n     */\n    $_enterHistory() {\n        this.$$trigger('$_addToHistory', {\n            event: {\n                href: this.href,\n            }\n        })\n    }\n\n    /**\n     * 检查 url 变化是否需要跳转\n     */\n    $_checkUrl(oldValues) {\n        if (!this.$_allowCheck) return false\n\n        const window = cache.getWindow(this.$_pageId)\n\n        if (this.$_protocol !== oldValues.protocol || this.$_hostname !== oldValues.hostname || this.$_port !== oldValues.port) {\n            // 只能跳转相同 protocol、hostname 和 port 的 url\n            const jumpUrl = this.href\n\n            // 和 web 端不同，这里恢复成原状\n            this.$_protocol = oldValues.protocol\n            this.$_hostname = oldValues.hostname\n            this.$_port = oldValues.port\n            this.$_pathname = oldValues.pathname\n            this.$_search = oldValues.search\n            this.$_hash = oldValues.hash\n\n            window.$$trigger('pageaccessdenied', {\n                event: {\n                    url: jumpUrl,\n                    type: 'jump',\n                },\n            })\n\n            return false\n        }\n\n        if (this.$_pathname !== oldValues.pathname || this.$_search !== oldValues.search) {\n            const matchRoute = window.$$miniprogram.getMatchRoute(this.$_pathname)\n\n            if (matchRoute) {\n                let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n                if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n                if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n                param = '?' + param.join('&')\n\n                const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'redirectTo'\n                wx[callMethod]({\n                    url: `${matchRoute}${param}`,\n                })\n\n                if (callMethod === 'switchTab') {\n                    // switchTab 不会销毁页面实例，所以也需要恢复成原状\n                    this.$_protocol = oldValues.protocol\n                    this.$_hostname = oldValues.hostname\n                    this.$_port = oldValues.port\n                    this.$_pathname = oldValues.pathname\n                    this.$_search = oldValues.search\n                    this.$_hash = oldValues.hash\n                }\n\n                return true\n            } else {\n                const jumpUrl = this.href\n\n                // 和 web 端不同，这里恢复成原状\n                this.$_protocol = oldValues.protocol\n                this.$_hostname = oldValues.hostname\n                this.$_port = oldValues.port\n                this.$_pathname = oldValues.pathname\n                this.$_search = oldValues.search\n                this.$_hash = oldValues.hash\n\n                window.$$trigger('pagenotfound', {\n                    event: {\n                        url: jumpUrl,\n                        type: 'jump',\n                    },\n                })\n\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     * 打开一个新页面\n     */\n    $$open(url) {\n        url = tool.completeURL(url, this.origin, true)\n\n        const window = cache.getWindow(this.$_pageId)\n        const parseRes = Location.$$parse(url)\n\n        if (parseRes.protocol !== this.$_protocol || parseRes.hostname !== this.$_hostname || parseRes.port !== this.$_port) {\n            // 只能打开相同 protocol、hostname 和 port 的 url\n            return window.$$trigger('pageaccessdenied', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n\n        const matchRoute = window.$$miniprogram.getMatchRoute(parseRes.pathname || '/')\n\n        if (matchRoute) {\n            let param = ['type=open', `targeturl=${encodeURIComponent(url)}`]\n            if (this.$_search) param.push(`search=${encodeURIComponent(parseRes.search || '')}`)\n            if (this.$_hash) param.push(`hash=${encodeURIComponent(parseRes.hash || '')}`)\n\n            param = '?' + param.join('&')\n\n            const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'navigateTo'\n            wx[callMethod]({\n                url: `${matchRoute}${param}`,\n            })\n        } else {\n            window.$$trigger('pagenotfound', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(url = '') {\n        const {\n            protocol, hostname, port, pathname, hash, search\n        } = Location.$$parse(url)\n\n        this.$_protocol = protocol || 'https:'\n        this.$_hostname = hostname || ''\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    /**\n     * 解析 href\n     */\n    static $$parse(href = '') {\n        href = href.trim()\n\n        // protocol\n        let protocol = /^[a-zA-Z0-9]+:/i.exec(href)\n        if (protocol) {\n            protocol = protocol[0].toLowerCase()\n            href = href.slice(protocol.length)\n        }\n\n        // 跳过 //\n        if (href.indexOf('//') === 0) {\n            href = href.slice(2)\n        }\n\n        let hostStart = 0\n        let hostEnd = -1\n        let isEnd = false\n        let host\n        for (let i = 0, len = href.length; i < len; i++) {\n            const char = href[i]\n            if ('\\t\\n\\r \"%\\';<>\\\\^`{|}'.indexOf(char) >= 0) {\n                // RFC 2396：不允许在 hostname 中使用的字符\n                if (hostEnd === -1) hostEnd = i\n            } else if ('#/?'.indexOf(char) >= 0) {\n                // host 结束符\n                if (hostEnd === -1) hostEnd = i\n                isEnd = true\n            } else if (char === '@') {\n                hostStart = i + 1\n                hostEnd = -1\n            }\n\n            if (isEnd) break\n        }\n\n        if (hostEnd === -1) {\n            host = href.slice(hostStart)\n            href = ''\n        } else {\n            host = href.slice(hostStart, hostEnd)\n            href = href.slice(hostEnd)\n        }\n\n\n        // port\n        let port = /:[0-9]*$/.exec(host)\n        if (port) {\n            port = port[0]\n            host = host.slice(0, host.length - port.length)\n\n            if (port !== ':') port = port.slice(1)\n        } else {\n            port = ''\n        }\n\n        // hostname\n        for (let i = 0, len = host.length; i < len; i++) {\n            const char = host[i]\n            const isValid = (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9') || '.-+_'.indexOf(char) >= 0 || char.charCodeAt(0) > 127\n\n            // 不合法的 host 字符\n            if (!isValid) {\n                host = host.slice(0, i)\n\n                href = `/${host.slice(i)}${href}`\n            }\n        }\n        const hostname = host.length > 255 ? '' : host.toLowerCase()\n\n        // hash\n        let hash\n        let searchIndex = -1\n        let hashIndex = -1\n        for (let i = 0, len = href.length; i < len; i++) {\n            if (href[i] === '#') {\n                hash = href.slice(i)\n                hashIndex = i\n                break\n            } else if (href[i] === '?' && searchIndex === -1) {\n                searchIndex = i\n            }\n        }\n        hash = hash === '#' ? '' : hash\n\n        // search\n        let search\n        if (searchIndex !== -1) {\n            if (hashIndex === -1) {\n                search = href.slice(searchIndex)\n            } else {\n                search = href.slice(searchIndex, hashIndex)\n            }\n        }\n        search = search === '?' ? '' : search\n\n        // pathname\n        let pathname\n        const firstIndex = searchIndex !== -1 && (hashIndex === -1 || searchIndex < hashIndex) ? searchIndex : hashIndex\n        if (firstIndex > 0) {\n            pathname = href.slice(0, firstIndex)\n        } else if (firstIndex === -1 && href.length > 0) {\n            pathname = href\n        }\n        if (hostname && !pathname) {\n            pathname = '/'\n        }\n\n        return {\n            protocol,\n            hostname,\n            port,\n            pathname,\n            hash,\n            search,\n        }\n    }\n\n    /**\n     * 不触发检查的方式替换 href\n     */\n    $$setHrefWithoutCheck(value) {\n        this.$_allowCheck = false\n        this.replace(value)\n        this.$_allowCheck = true\n    }\n\n    /**\n     * 开始检查 hash 变化\n     */\n    $$startCheckHash() {\n        if (!this.$_allowCheck) return\n\n        this.$_lastHash = this.$_hash\n        this.$_lastPathname = this.$_pathname\n        this.$_lastSearch = this.$_search\n        this.$_lastHref = this.href\n    }\n\n    /**\n     * 检查 hash 变化\n     */\n    $$endCheckHash(needCheckUrlChange) {\n        if (!this.$_allowCheck) return\n\n        if ((needCheckUrlChange || (this.$_lastPathname === this.$_pathname && this.$_lastSearch === this.$_search)) && this.$_lastHash !== this.$_hash) {\n            this.$$trigger('hashchange', {\n                event: {\n                    oldURL: this.$_lastHref,\n                    newURL: this.href,\n                }\n            })\n        }\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get protocol() {\n        return this.$_protocol\n    }\n\n    set protocol(value) {\n        if (!value || typeof value !== 'string') return\n\n        const parseRes = /^([a-z0-9.+-]+)(:)?$/i.exec(value)\n        const oldValues = this.$_getOldValues()\n\n        if (parseRes) {\n            if (parseRes[2] === ':') {\n                this.$_protocol = value\n            } else {\n                this.$_protocol = `${parseRes[1]}:`\n            }\n\n            if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n        }\n    }\n\n    get host() {\n        return (this.$_hostname || '') + (this.$_port ? ':' + this.$_port : '')\n    }\n\n    set host(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname, port} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    set hostname(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    set port(value) {\n        value = +value\n\n        if (typeof value !== 'number' || !isFinite(value) || value <= 0) return\n\n        const port = value === 80 ? '' : value + ''\n        const oldValues = this.$_getOldValues()\n\n        this.$_port = port\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get origin() {\n        return `${this.$_protocol}//${this.host}`\n    }\n\n    set origin(value) {\n        if (!value || typeof value !== 'string') return\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) return // 没有带协议\n\n        const {protocol, hostname, port} = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    set pathname(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '/') {\n            this.$_pathname = '/'\n        } else {\n            if (value[0] !== '/') value = `/${value}`\n\n            const {pathname} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_pathname = pathname || '/'\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    set search(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '?') {\n            this.$_search = ''\n        } else {\n            if (value[0] !== '?') value = `?${value}`\n\n            const {search} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_search = search || ''\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    set hash(value) {\n        if (typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!value || value === '#') {\n            this.$_hash = ''\n        } else {\n            if (value[0] !== '#') value = `#${value}`\n\n            const {hash} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_hash = hash || ''\n        }\n\n        this.$$endCheckHash()\n        this.$_enterHistory()\n    }\n\n    get href() {\n        return `${this.$_protocol}//${this.host}${this.$_pathname}${this.$_search}${this.$_hash}`\n    }\n\n    set href(value) {\n        this.$_setHrefWithoutEnterHistory(value)\n        this.$_enterHistory()\n    }\n\n    reload() {\n        const window = cache.getWindow(this.$_pageId)\n        let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n        if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n        if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n        param = '?' + param.join('&')\n\n        const callMethod = window.$$miniprogram.isTabBarPage(this.$_pageRoute) ? 'switchTab' : 'redirectTo'\n        wx[callMethod]({\n            url: `${this.$_pageRoute}${param}`,\n        })\n    }\n\n    replace(value) {\n        // 和直接赋值 location.href 不同，不需要进入 history\n        this.$_setHrefWithoutEnterHistory(value)\n    }\n\n    toString() {\n        return this.href\n    }\n}\n\nmodule.exports = Location\n","const EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\nconst Cookie = require('./bom/cookie')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n}\nconst WX_COMPONENT_TRANSFORM_LIST = ['checkbox', 'checkbox-group', 'input', 'label', 'radio', 'radio-group', 'textarea', 'canvas'] // 需要从 wx-xxx 转回 xxx 节点\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\n/**\n * 将部分 wx-xxx 组件转换成普通 dom 节点\n */\nfunction transformWxComponent2Dom(wxComponentName, options, tree) {\n    let groupEvent = null\n    if (wxComponentName === 'radio' || wxComponentName === 'checkbox') {\n        options.attrs.type = wxComponentName\n        wxComponentName = 'input'\n    } else if (wxComponentName === 'radio-group' || wxComponentName === 'checkbox-group') {\n        groupEvent = wxComponentName.split('-')[0]\n        wxComponentName = 'div'\n    }\n    options.tagName = wxComponentName\n    delete options.attrs.behavior\n    const normalElement = CONSTRUCTOR_MAP[wxComponentName.toUpperCase()] || Element\n    const element = normalElement.$$create(options, tree)\n\n    if (groupEvent) {\n        // group 组件转成 div，监听底下的表单组件来做处理\n        element.addEventListener('change', evt => {\n            if (!evt.$$isGroup) evt.stopImmediatePropagation()\n        })\n        element.addEventListener(`$$${groupEvent}Change`, evt => {\n            const detail = {}\n            if (groupEvent === 'radio') {\n                (element.querySelectorAll('input[type=radio]') || []).forEach(item => {\n                    if (item !== evt.target) item.setAttribute('checked', false)\n                })\n                detail.value = evt.target.value\n            } else if (groupEvent === 'checkbox') {\n                detail.value = (element.querySelectorAll('input[type=checkbox]') || [])\n                    .filter(item => item.checked)\n                    .map(item => item.value)\n            }\n\n            element.$$trigger('change', {\n                event: new Event({\n                    timeStamp: evt.timeStamp,\n                    touches: evt.touches,\n                    changedTouches: evt.changedTouches,\n                    name: 'change',\n                    target: element,\n                    eventPhase: Event.AT_TARGET,\n                    detail,\n                    $$extra: {$$isGroup: true},\n                }),\n                currentTarget: element,\n            })\n        })\n    }\n\n    return element\n}\n\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_cookie = new Cookie(pageName)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n        this.$_node.$$children.push(this.$_tree.root)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 完整的 cookie，包括 httpOnly 也能获取到\n     */\n    get $$cookie() {\n        return this.$_cookie.getCookie(this.URL, true)\n    }\n\n    /**\n     * 获取 cookie 实例\n     */\n    get $$cookieInstance() {\n        return this.$_cookie\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        } else if (tagName === 'WX-COMPONENT') {\n            options.attrs = options.attrs || {}\n            const behavior = options.attrs.behavior\n            if (behavior && WX_COMPONENT_TRANSFORM_LIST.indexOf(behavior) !== -1) return transformWxComponent2Dom(behavior, options, tree) // 需要转成普通 dom\n            else return WxComponent.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = tool.checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.attrs = options.attrs || {}\n            if (WX_COMPONENT_TRANSFORM_LIST.indexOf(wxComponentName) !== -1) return transformWxComponent2Dom(wxComponentName, options, tree) // 需要转成普通 dom\n            else {\n                options.tagName = 'wx-component'\n                options.attrs.behavior = wxComponentName\n                return WxComponent.$$create(options, tree)\n            }\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get cookie() {\n        return this.$_cookie.getCookie(this.URL)\n    }\n\n    set cookie(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_cookie.setCookie(value, this.URL)\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this.documentElement)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this.documentElement)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`, this.documentElement)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this.documentElement)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this.documentElement)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性映射表\n     */\n    get map() {\n        return this.$_map\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Location = require('./bom/location')\nconst Navigator = require('./bom/navigator')\nconst Screen = require('./bom/screen')\nconst History = require('./bom/history')\nconst Miniprogram = require('./bom/miniprogram')\nconst {SessionStorage, LocalStorage} = require('./bom/storage')\nconst WorkerImpl = require('./bom/worker')\nconst Performance = require('./bom/performance')\nconst OriginalXMLHttpRequest = require('./bom/xml-http-request')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    location: Location.prototype,\n    navigator: Navigator.prototype,\n    performance: Performance.prototype,\n    screen: Screen.prototype,\n    history: History.prototype,\n    localStorage: LocalStorage.prototype,\n    sessionStorage: SessionStorage.prototype,\n    XMLHttpRequest: OriginalXMLHttpRequest.prototype,\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\nfunction noop() {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const config = cache.getConfig()\n        const timeOrigin = +new Date()\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_location = new Location(pageId)\n        this.$_navigator = new Navigator()\n        this.$_screen = new Screen()\n        this.$_history = new History(this.$_location)\n        this.$_miniprogram = new Miniprogram(pageId)\n        this.$_localStorage = new LocalStorage(pageId)\n        this.$_sessionStorage = new SessionStorage(pageId)\n        this.$_performance = new Performance(timeOrigin)\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        // HTMLElement 构造器\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n\n        // CustomEvent 构造器\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n\n        // XMLHttpRequest 构造器\n        this.$_xmlHttpRequestConstructor = class XMLHttpRequest extends OriginalXMLHttpRequest {constructor() { super(pageId) }}\n\n        // Worker/SharedWorker 构造器\n        if (config.generate && config.generate.worker) {\n            this.$_workerConstructor = class Worker extends WorkerImpl.Worker {constructor(url) { super(url, pageId) }}\n            this.$_sharedWorkerConstructor = class SharedWorker extends WorkerImpl.SharedWorker {constructor(url) { super(url, pageId) }}\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听 location 的事件\n        this.$_location.addEventListener('hashchange', ({oldURL, newURL}) => {\n            this.$$trigger('hashchange', {\n                event: new Event({\n                    name: 'hashchange',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {\n                        oldURL,\n                        newURL,\n                    },\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听 history 的事件\n        this.$_history.addEventListener('popstate', ({state}) => {\n            this.$$trigger('popstate', {\n                event: new Event({\n                    name: 'popstate',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {state},\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        WorkerImpl.destroy(pageId)\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document ? this.document.$$imageConstructor : noop\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get console() {\n        return console\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    get Worker() {\n        return this.$_workerConstructor\n    }\n\n    get SharedWorker() {\n        return this.$_sharedWorkerConstructor\n    }\n\n    get devicePixelRatio() {\n        return wx.getSystemInfoSync().pixelRatio\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n\n    // 引入 polyfill 实现可能会引发内存泄漏\n    setImmediate(callback, ...args) {\n        if (typeof callback !== 'function') return\n        return setTimeout(callback, 0, ...args)\n    }\n\n    // 引入 polyfill 实现可能会引发内存泄漏\n    clearImmediate(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const QuerySelector = require('./query-selector')\nconst tool = require('../util/tool')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        this.querySelector = new QuerySelector()\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        if (tool.checkIsWxComponent(tagName.toLowerCase(), false)) {\n            // 内置组件\n            tagName = tagName.toLowerCase().slice(3)\n            return (cache.tagMap['WX-COMPONENT'] || []).filter(findNode => findNode.behavior === tagName)\n        }\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    query(selector, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return this.querySelector.exec(selector, {\n            idMap: this.idMap,\n            tagMap: cache.tagMap,\n            classMap: cache.classMap,\n        })\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 感谢 sizzle：https://github.com/jquery/sizzle/tree/master\n */\nconst tool = require('../util/tool')\n\nconst PSEUDO_CHECK = {\n    checked: node => node.checked || node.selected,\n    disabled: node => node.disabled,\n    enabled: node => !node.disabled,\n    'first-child': node => node.parentNode.children[0] === node,\n    'last-child': node => node.parentNode.children[node.parentNode.children.length - 1] === node,\n    'nth-child': (node, param) => {\n        const children = node.parentNode.children\n        const {a, b} = param\n        const index = children.indexOf(node) + 1\n\n        if (a) {\n            return (index - b) % a === 0\n        } else {\n            return index === b\n        }\n    },\n}\n\nconst ATTR_CHECK = {\n    '=': (nodeVal, val) => nodeVal === val,\n    '~=': (nodeVal, val) => nodeVal.split(/\\s+/).indexOf(val) !== -1,\n    '|=': (nodeVal, val) => nodeVal === val || nodeVal.indexOf(val + '-') === 0,\n    '^=': (nodeVal, val) => nodeVal.indexOf(val) === 0,\n    '$=': (nodeVal, val) => nodeVal.substr(nodeVal.length - val.length) === val,\n    '*=': (nodeVal, val) => nodeVal.indexOf(val) !== -1,\n}\n\nconst KINSHIP_CHECK = {\n    ' ': (node, kinshipRule) => {\n        let kinshipNode = node.parentNode\n\n        while (kinshipNode) {\n            if (checkHit(kinshipNode, kinshipRule)) return kinshipNode\n\n            kinshipNode = kinshipNode.parentNode\n        }\n\n        return null\n    },\n    '>': (node, kinshipRule) => {\n        const kinshipNode = node.parentNode\n\n        return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n    },\n    '+': (node, kinshipRule) => {\n        const children = node.parentNode\n\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i]\n\n            if (child === node) {\n                const kinshipNode = children[i - 1]\n\n                return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n            }\n        }\n\n        return null\n    },\n    '~': (node, kinshipRule) => {\n        const children = node.parentNode\n        let foundCurrent = false\n\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i]\n\n            if (foundCurrent && checkHit(child, kinshipRule)) return child\n            if (child === node) foundCurrent = true\n        }\n\n        return null\n    },\n}\n\n/**\n * 检查节点是否符合规则\n */\nfunction checkHit(node, rule) {\n    if (!node) return false\n\n    const {\n        id, class: classList, tag, pseudo, attr\n    } = rule\n\n    // id 选择器\n    if (id) {\n        if (node.id !== id) return false\n    }\n\n    // 类选择器\n    if (classList && classList.length) {\n        for (const className of classList) {\n            if (!node.classList || !node.classList.contains(className)) return false\n        }\n    }\n\n    // 标签选择器\n    if (tag && tag !== '*') {\n        if (tool.checkIsWxComponent(tag.toLowerCase(), false)) {\n            // 内置组件\n            if (node.tagName !== 'WX-COMPONENT' || node.behavior !== tag.slice(3).toLowerCase()) return false\n        } else if (node.tagName !== tag.toUpperCase()) {\n            return false\n        }\n    }\n\n    // 伪类选择器\n    if (pseudo) {\n        for (const {name, param} of pseudo) {\n            const checkPseudo = PSEUDO_CHECK[name]\n            if (!checkPseudo || !checkPseudo(node, param)) return false\n        }\n    }\n\n    // 属性选择器\n    if (attr) {\n        for (const {name, opr, val} of attr) {\n            const nodeVal = node[name] || node.getAttribute(name)\n\n            if (nodeVal === undefined || nodeVal === null) return false\n            if (opr) {\n                // 存在操作符\n                const checkAttr = ATTR_CHECK[opr]\n                if (!checkAttr || !checkAttr(nodeVal, val)) return false\n            }\n        }\n    }\n\n    return true\n}\n\n/**\n * 数组去重\n */\nfunction unique(list) {\n    for (let i = 0; i < list.length; i++) {\n        const a = list[i]\n\n        for (let j = i + 1; j < list.length; j++) {\n            const b = list[j]\n            if (a === b) list.splice(j, 1)\n        }\n    }\n\n    return list\n}\n\n/**\n * 将节点按照文档顺序排列\n */\nfunction sortNodes(list) {\n    list.sort((a, b) => {\n        const aList = [a]\n        const bList = [b]\n        let aParent = a.parentNode\n        let bParent = b.parentNode\n\n        if (aParent === bParent) {\n            // 检查顺序\n            const children = aParent.children\n            return children.indexOf(a) - children.indexOf(b)\n        }\n\n        // a 到根的列表\n        while (aParent) {\n            aList.unshift(aParent)\n            aParent = aParent.parentNode\n        }\n\n        // b 到根的列表\n        while (bParent) {\n            bList.unshift(bParent)\n            bParent = bParent.parentNode\n        }\n\n        // 找到最近共同祖先\n        let i = 0\n        while (aList[i] === bList[i]) i++\n\n        // 检查顺序\n        const children = aList[i - 1].children\n        return children.indexOf(aList[i]) - children.indexOf(bList[i])\n    })\n\n    return list\n}\n\nclass QuerySelector {\n    constructor() {\n        this.parseCache = {} // 解析查询串缓存\n        this.parseCacheKeys = []\n\n        const idReg = '#([\\\\\\\\\\\\w-]+)' // id 选择器\n        const tagReg = '\\\\*|wx-component|[a-zA-Z-]+\\\\w*' // 标签选择器\n        const classReg = '\\\\.([\\\\\\\\\\\\w-]+)' // 类选择器\n        const pseudoReg = ':([\\\\\\\\\\\\w-]+)(?:\\\\(([^\\\\(\\\\)]*|(?:\\\\([^\\\\)]+\\\\)|[^\\\\(\\\\)]*)+)\\\\))?' // 伪类选择器\n        const attrReg = '\\\\[\\\\s*([\\\\\\\\\\\\w-]+)(?:([*^$|~!]?=)[\\'\"]?([^\\'\"\\\\[]+)[\\'\"]?)?\\\\s*\\\\]' // 属性选择器\n        const kinshipReg = '\\\\s*([>\\\\s+~](?!=))\\\\s*' // 亲属选择器\n        this.regexp = new RegExp(`^(?:(${idReg})|(${tagReg})|(${classReg})|(${pseudoReg})|(${attrReg})|(${kinshipReg}))`)\n    }\n\n    /**\n     * 存入解析查询串缓存\n     */\n    setParseCache(key, value) {\n        if (this.parseCacheKeys.length > 50) {\n            delete this.parseCache[this.parseCacheKeys.shift()]\n        }\n\n        this.parseCacheKeys.push(key)\n        this.parseCache[key] = value\n\n        return value\n    }\n\n    /**\n     * 获取解析查询串缓存\n     */\n    getParseCache(key) {\n        return this.parseCache[key]\n    }\n\n    /**\n     * 解析查询串\n     */\n    parse(selector) {\n        const segment = [{tag: '*'}]\n        const regexp = this.regexp\n\n        const onProcess = (all, idAll, id, tagAll, classAll, className, pseudoAll, pseudoName, pseudoParam, attrAll, attrName, attrOpr, attrVal, kinshipAll, kinship) => {\n            if (idAll) {\n                // id 选择器\n                segment[segment.length - 1].id = id\n            } else if (tagAll) {\n                // 标签选择器\n                segment[segment.length - 1].tag = tagAll.toLowerCase()\n            } else if (classAll) {\n                // 类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.class = currentRule.class || []\n\n                currentRule.class.push(className)\n            } else if (pseudoAll) {\n                // 伪类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.pseudo = currentRule.pseudo || []\n                pseudoName = pseudoName.toLowerCase()\n\n                const pseudo = {name: pseudoName}\n\n                if (pseudoParam) pseudoParam = pseudoParam.trim()\n                if (pseudoName === 'nth-child') {\n                    // 处理 nth-child 伪类，参数统一处理成 an + b 的格式\n                    pseudoParam = pseudoParam.replace(/\\s+/g, '')\n\n                    if (pseudoParam === 'even') {\n                        // 偶数个\n                        pseudoParam = {a: 2, b: 2}\n                    } else if (pseudoParam === 'odd') {\n                        // 奇数个\n                        pseudoParam = {a: 2, b: 1}\n                    } else if (pseudoParam) {\n                        // 其他表达式\n                        const nthParsed = pseudoParam.match(/^(?:(\\d+)|(\\d*)?n([+-]\\d+)?)$/)\n\n                        if (!nthParsed) {\n                            // 解析失败\n                            pseudoParam = {a: 0, b: 1}\n                        } else if (nthParsed[1]) {\n                            // 纯数字\n                            pseudoParam = {a: 0, b: +nthParsed[1]}\n                        } else {\n                            // 表达式\n                            pseudoParam = {\n                                a: nthParsed[2] ? +nthParsed[2] : 1,\n                                b: nthParsed[3] ? +nthParsed[3] : 0,\n                            }\n                        }\n                    } else {\n                        // 默认取第一个\n                        pseudoParam = {a: 0, b: 1}\n                    }\n                }\n                if (pseudoParam) pseudo.param = pseudoParam\n\n                currentRule.pseudo.push(pseudo)\n            } else if (attrAll) {\n                // 属性选择器\n                const currentRule = segment[segment.length - 1]\n\n                currentRule.attr = currentRule.attr || []\n                currentRule.attr.push({\n                    name: attrName,\n                    opr: attrOpr,\n                    val: attrVal\n                })\n            } else if (kinshipAll) {\n                // 亲属选择器\n                segment[segment.length - 1].kinship = kinship\n                segment.push({tag: '*'}) // 插入新规则\n            }\n\n            return ''\n        }\n\n        // 逐个选择器解析\n        let lastParse\n        selector = selector.replace(regexp, onProcess)\n\n        while (lastParse !== selector) {\n            lastParse = selector\n            selector = selector.replace(regexp, onProcess)\n        }\n\n        return selector ? '' : segment\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    exec(selector, extra) {\n        selector = selector.trim().replace(/\\s+/g, ' ').replace(/\\s*(,|[>\\s+~](?!=)|[*^$|~!]?=)\\s*/g, '$1')\n        const {idMap, tagMap, classMap} = extra\n\n        // 查询缓存\n        let segment = this.getParseCache(selector)\n\n        // 无缓存，进行解析\n        if (!segment) {\n            segment = this.parse(selector)\n\n            // 无法正常解析\n            if (!segment) return []\n\n            this.setParseCache(selector, segment)\n        }\n\n        // 无解析结果\n        if (!segment[0]) return []\n\n        // 执行解析结果\n        const lastRule = segment[segment.length - 1] // 从右往左\n        const {id, class: classList, tag} = lastRule\n        let hitNodes = []\n\n        // 寻找可能符合要求的节点\n        if (id) {\n            // id 选择器\n            const node = idMap[id]\n            hitNodes = node ? [node] : []\n        } else if (classList && classList.length) {\n            // 类选择器\n            for (const className of classList) {\n                const classNodes = classMap[className]\n                if (classNodes) {\n                    for (const classNode of classNodes) {\n                        if (hitNodes.indexOf(classNode) === -1) hitNodes.push(classNode)\n                    }\n                }\n            }\n        } else if (tag && tag !== '*') {\n            // 标签选择器，查询指定标签，支持内置组件\n            const tagName = tool.checkIsWxComponent(tag.toLowerCase(), false) ? 'WX-COMPONENT' : tag.toUpperCase()\n            const tagNodes = tagMap[tagName]\n            if (tagNodes) hitNodes = tagNodes\n        } else {\n            // 标签选择器，查询全部节点\n            Object.keys(tagMap).forEach(key => {\n                const tagNodes = tagMap[key]\n                if (tagNodes) {\n                    for (const tagNode of tagNodes) hitNodes.push(tagNode)\n                }\n            })\n        }\n\n        // 从下往上过滤节点列表\n        if (hitNodes.length && segment.length) {\n            for (let i = hitNodes.length - 1; i >= 0; i--) {\n                let checkNode = hitNodes[i]\n                let isMatched = false\n\n                // 从右往左进行规则过滤\n                for (let j = segment.length - 1; j >= 0; j--) {\n                    const prevRule = segment[j - 1]\n\n                    // 检查待选节点，后续的亲属节点不需要再检查\n                    if (j === segment.length - 1) isMatched = checkHit(checkNode, lastRule)\n\n                    if (isMatched && prevRule) {\n                        // 检查亲属选择器\n                        const kinship = prevRule.kinship\n                        const checkKinship = KINSHIP_CHECK[kinship]\n\n                        if (checkKinship) checkNode = checkKinship(checkNode, prevRule)\n\n                        if (!checkNode) {\n                            // 亲属检查失败\n                            isMatched = false\n                            break\n                        }\n                    } else {\n                        break\n                    }\n                }\n\n                if (!isMatched) hitNodes.splice(i, 1) // 不符合，从待选节点列表中删除\n            }\n        }\n\n        if (hitNodes.length) {\n            // 去重、排序\n            hitNodes = unique(hitNodes)\n            hitNodes = sortNodes(hitNodes)\n        }\n\n        return hitNodes\n    }\n}\n\nmodule.exports = QuerySelector\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance'\n]\n","/**\n * 感谢 John Resig： https://johnresig.com/files/htmlparser.js\n */\n\n// 正则声明\nconst doctypeReg = /^<!\\s*doctype((?:\\s+[\\w:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst startTagReg = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Za-z0-9_:@.]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst endTagReg = /^<\\/([-A-Za-z0-9_]+)[^>]*>/i\nconst attrReg = /([-A-Za-z0-9_:@.]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g\n\n// 空元素 - https://www.w3.org/TR/html/syntax.html#void-elements\nconst voidMap = {};\n['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].forEach(n => voidMap[n] = true)\n\n// 块级元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements\nconst blockMap = {};\n['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'].forEach(n => blockMap[n] = true)\n\n// 行内元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements#Elements\nconst inlineMap = {};\n['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'].forEach(n => inlineMap[n] = true)\n\n// 可能包含任意内容的元素 - https://www.w3.org/TR/html/syntax.html#raw-text\nconst rawTextMap = {};\n['script', 'style'].forEach(n => rawTextMap[n] = true)\n\nconst longAttributeCache = {}\nlet seed = 0\n\n/**\n * 分词\n */\nfunction tokenize(content, handler) {\n    const stack = []\n    let last = content\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    while (content) {\n        let isText = true\n\n        if (!stack.last() || !rawTextMap[stack.last()]) {\n            if (content.indexOf('<!--') === 0) {\n                // comment\n                const index = content.indexOf('-->')\n\n                if (index >= 0) {\n                    if (handler.comment) handler.comment(content.substring(4, index))\n                    content = content.substring(index + 3)\n                    isText = false\n                }\n            } else if (content.indexOf('</') === 0) {\n                // end tag\n                const match = content.match(endTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(endTagReg, parseEndTag)\n                    isText = false\n                }\n            } else if (content.indexOf('<') === 0) {\n                // start tag\n                let match = content.match(startTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(startTagReg, parseStartTag)\n                    isText = false\n                } else {\n                    // 检测 doctype\n                    match = content.match(doctypeReg)\n\n                    if (match) {\n                        content = content.substring(match[0].length)\n                        isText = false\n                    }\n                }\n            }\n\n            if (isText) {\n                const indexStart = content.indexOf('<')\n                const indexEnd = content.indexOf('>')\n\n                // 简单自动纠错，只有 <、只有 >、> 在 < 前面、< 和 > 中间没有内容\n                let text = ''\n                if (indexStart === -1 || indexStart >= 0 && indexEnd === -1 || indexStart > indexEnd || (indexEnd > indexStart && !content.substring(indexStart + 1, indexEnd).trim())) {\n                    text = content.replace(/>/g, '&gt;').replace(/</g, '&lt;')\n                    content = ''\n                } else {\n                    text = content.substring(0, indexStart)\n                    content = content.substring(indexStart)\n                }\n\n                if (handler.text && text) handler.text(text)\n            }\n        } else {\n            const execRes = (new RegExp(`</${stack.last()}[^>]*>`)).exec(content)\n\n            if (execRes) {\n                const text = content.substring(0, execRes.index)\n                content = content.substring(execRes.index + execRes[0].length)\n\n                text.replace(/<!--(.*?)-->/g, '')\n                if (text && handler.text) handler.text(text)\n            }\n\n            parseEndTag('', stack.last())\n        }\n\n        if (content === last) throw new Error(`parse error: ${content}`)\n        last = content\n    }\n\n    // 关闭栈内的标签\n    parseEndTag()\n\n    function parseStartTag(tag, tagName, rest, unary) {\n        tagName = tagName.toLowerCase()\n        unary = !!unary\n\n        // 放宽规则，允许行内元素包含块级元素\n        // if (blockMap[tagName]) {\n        //     while (stack.last() && inlineMap[stack.last()]) {\n        //         // 自动关闭栈内的行内元素\n        //         parseEndTag('', stack.last())\n        //     }\n        // }\n\n        unary = voidMap[tagName] || !!unary\n\n        if (!unary) stack.push(tagName)\n\n        if (handler.start) {\n            const attrs = []\n\n            try {\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value,\n                    })\n                })\n            } catch (err) {\n                // 某些安卓机遇到过长的字符串执行属性正则替换会跪（主要是 base 64），这里就先临时过滤掉这种特殊情况\n                rest = rest.replace(/url\\([^)]+\\)/ig, all => {\n                    const id = `url(:#|${++seed}|#:)`\n                    longAttributeCache[id] = all\n                    return id\n                })\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value: value.replace(/url\\(:#\\|\\d+\\|#:\\)/ig, all => longAttributeCache[all] || 'url()'),\n                    })\n                })\n            }\n\n            handler.start(tagName, attrs, unary)\n        }\n    }\n\n    function parseEndTag(tag, tagName) {\n        let pos\n\n        if (!tagName) {\n            pos = 0\n        } else {\n            // 找到同名的开始标签\n            tagName = tagName.toLowerCase()\n\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos] === tagName) break\n            }\n        }\n\n        if (pos >= 0) {\n            // 关闭开始标签和结束标签中的所有标签\n            for (let i = stack.length - 1; i >= pos; i--) {\n                if (handler.end) handler.end(stack[i])\n            }\n\n            stack.length = pos\n        }\n    }\n}\n\n/**\n * 解析\n */\nfunction parse(html) {\n    const r = {\n        children: [],\n    }\n    const stack = [r]\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    tokenize(html, {\n        start(tagName, attrs, unary) {\n            const node = {\n                type: 'element',\n                tagName,\n                attrs,\n                unary,\n                children: [],\n            }\n\n            stack.last().children.push(node)\n\n            if (!unary) {\n                stack.push(node)\n            }\n        },\n        // eslint-disable-next-line no-unused-vars\n        end(tagName) {\n            const node = stack.pop()\n\n            if (node.tagName === 'table') {\n                // 补充插入 tbody\n                let hasTbody = false\n\n                for (const child of node.children) {\n                    if (child.tagName === 'tbody') {\n                        hasTbody = true\n                        break\n                    }\n                }\n\n                if (!hasTbody) {\n                    node.children = [{\n                        type: 'element',\n                        tagName: 'tbody',\n                        attrs: [],\n                        unary: false,\n                        children: node.children,\n                    }]\n                }\n            }\n        },\n        text(content) {\n            content = content.trim()\n            if (!content) return\n\n            stack.last().children.push({\n                type: 'text',\n                content,\n            })\n        },\n        comment(content) {\n            content = content.trim()\n\n            stack.last().children.push({\n                type: 'comment',\n                content,\n            })\n        },\n    })\n\n    return r.children\n}\n\nmodule.exports = {\n    tokenize,\n    parse,\n    voidMap,\n    blockMap,\n    inlineMap,\n    rawTextMap,\n}\n","const Element = require('../element')\nconst Location = require('../../bom/location')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get href() {\n        return this.$_attrs.get('href')\n    }\n\n    set href(value) {\n        value = '' + value\n\n        if (value.indexOf('//') === -1) {\n            const {origin} = cache.getConfig()\n            value = origin + (value[0] === '/' ? value : `/${value}`)\n        }\n\n        this.$_attrs.set('href', value)\n        const {\n            protocol, hostname, port, pathname, search, hash\n        } = Location.$$parse(value)\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Event = require('../../event/event')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = this.$_attrs.get('width')\n        const height = this.$_attrs.get('height')\n\n        const widthNum = +width\n        if (!isNaN(+widthNum) && +widthNum >= 0) this.$_style.width = `${width}px`\n        else if (width && typeof width === 'string') this.$_style.width = width // 可能设置 width=\"100%\"\n\n        const heightNum = +height\n        if (!isNaN(+heightNum) && +heightNum >= 0) this.$_style.height = `${height}px`\n        else if (height && typeof height === 'string') this.$_style.height = height // 可能设置 width=\"100%\"\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    set src(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_attrs.set('src', value)\n\n        setTimeout(() => {\n            wx.getImageInfo({\n                src: this.src,\n                success: res => {\n                    // 加载成功，调整图片的宽高\n                    this.$_resetRect(res)\n\n                    // 触发 load 事件\n                    this.$$trigger('load', {\n                        event: new Event({\n                            name: 'load',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n                fail: () => {\n                    // 加载失败，调整图片的宽高\n                    this.$_resetRect({width: 0, height: 0})\n\n                    // 触发 error 事件\n                    this.$$trigger('error', {\n                        event: new Event({\n                            name: 'error',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n            })\n        }, 0)\n    }\n\n    get width() {\n        return parseFloat(this.$_attrs.get('width'), 10) || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return parseFloat(this.$_attrs.get('height'), 10) || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                const {width, height} = this\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = width\n                this.$_node.height = height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        value = parseFloat(value)\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        value = parseFloat(value)\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n\n    createPath2D(...args) {\n        return this.$_node.createPath2D(...args)\n    }\n\n    createImage(...args) {\n        return this.$_node.createImage(...args)\n    }\n\n    createImageData(...args) {\n        return this.$_node.createImageData(...args)\n    }\n\n    requestAnimationFrame(...args) {\n        return this.$_node.requestAnimationFrame(...args)\n    }\n\n    cancelAnimationFrame(...args) {\n        return this.$_node.cancelAnimationFrame(...args)\n    }\n\n    toDataURL(...args) {\n        return this.$_node.toDataURL(...args)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        let value = this.$_attrs.get('value')\n        if (value === undefined) {\n            // 没有设置 value 的时候，取 options 中被选中那项的 value\n            const option = this.options.find(option => !!option.selected)\n            if (option) {\n                value = option.value\n                this.$$setAttributeWithoutUpdate('value', value)\n            }\n        }\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            tool.flushThrottleCache() // 先清空 setData\r\n            Promise.resolve().then(() => {\r\n                const scrollItem = this.ownerDocument.getElementById(value)\r\n                if (!scrollItem) return\r\n\r\n                const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n                if (!propName) return\r\n\r\n                const window = cache.getWindow(this.$_pageId)\r\n                Promise.all([\r\n                    new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                    scrollItem.$$getBoundingClientRect()\r\n                ]).then(res => {\r\n                    const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                    const scrollRect = res[0][0]\r\n                    const itemRect = res[1]\r\n\r\n                    super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n                }).catch(console.error)\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        if (name.indexOf('kbone-func-') === 0) {\r\n            // 特殊属性，用于传入函数\r\n            const realName = name.slice('kbone-func-'.length)\r\n            if (typeof value === 'function') {\r\n                super.setAttribute(realName, value)\r\n            } else {\r\n                const window = cache.getWindow(this.$_pageId)\r\n                super.setAttribute(realName, window[value])\r\n            }\r\n        } else {\r\n            super.setAttribute(name, value)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n","const Location = require('./location')\nconst cache = require('../util/cache')\n\nclass Cookie {\n    constructor(pageName) {\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        this.cookieStore = runtime.cookieStore\n        this.$_pageName = pageName\n\n        if (this.cookieStore !== 'storage' && this.cookieStore !== 'memory') {\n            // 需要全局共享\n            this.$_map = cache.getCookie()\n        } else {\n            this.$_map = {} // 三维数组，domain - path - key\n        }\n    }\n\n    static parse(cookieStr) {\n        if (!cookieStr && typeof cookieStr !== 'string') return null\n\n        cookieStr = cookieStr.trim().split(';')\n\n        // key-value\n        const parseKeyValue = /^([^=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.exec(cookieStr.shift())\n        if (!parseKeyValue) return null\n\n        const key = (parseKeyValue[1] || '').trim()\n        const value = (parseKeyValue[2] || '').trim()\n\n        // 其他字段\n        let path = null\n        let domain = null\n        let expires = null\n        let maxAge = null\n        let secure = false\n        let httpOnly = false\n\n        for (let item of cookieStr) {\n            item = item.trim()\n            if (!item) continue\n\n            let [key, value] = item.split('=')\n            key = (key || '').trim().toLowerCase()\n            value = (value || '').trim()\n\n            if (!key) continue\n\n            switch (key) {\n            case 'path':\n                if (value[0] === '/') path = value\n                break\n            case 'domain':\n                value = value.replace(/^\\./, '').toLowerCase()\n                if (value) domain = value\n                break\n            case 'expires':\n                if (value) {\n                    const timeStamp = Date.parse(value)\n                    if (timeStamp) expires = timeStamp\n                }\n                break\n            case 'max-age':\n                if (/^-?[0-9]+$/.test(value)) maxAge = +value * 1000\n                break\n            case 'secure':\n                secure = true\n                break\n            case 'httponly':\n                httpOnly = true\n                break\n            default:\n                // ignore\n                break\n            }\n        }\n\n        return {\n            key, value, path, domain, expires, maxAge, secure, httpOnly\n        }\n    }\n\n    /**\n     * 判断 domain\n     */\n    $_checkDomain(host, cookieDomain) {\n        if (host === cookieDomain) return true\n\n        const index = host.indexOf(`.${cookieDomain}`)\n\n        return index > 0 && cookieDomain.length + index + 1 === host.length\n    }\n\n    /**\n     * 判断 path\n     */\n    $_checkPath(path, cookiePath) {\n        if (path === cookiePath) return true\n\n        cookiePath = cookiePath === '/' ? '' : cookiePath\n        return path.indexOf(`${cookiePath}/`) === 0\n    }\n\n    /**\n     * 判断过期\n     */\n    $_checkExpires(cookie) {\n        const now = Date.now()\n\n        // maxAge 优先\n        if (cookie.maxAge !== null) return cookie.createTime + cookie.maxAge > now\n\n        // 判断 expires\n        if (cookie.expires !== null) return cookie.expires > now\n\n        return true\n    }\n\n    /**\n     * 设置 cookie\n     */\n    setCookie(cookie, url) {\n        cookie = Cookie.parse(cookie)\n\n        if (!cookie) return\n\n        const {hostname, port, pathname} = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n\n        if (cookie.domain) {\n            // 判断 domain\n            if (!this.$_checkDomain(host, cookie.domain)) return\n        } else {\n            // 使用 host 作为默认的 domain\n            cookie.domain = host\n        }\n\n        // 需要设置 path 字段的情况，取 url 中除去最后一节的 path\n        if (!cookie.path || cookie.path[0] !== '/') {\n            const lastIndex = path.lastIndexOf('/')\n\n            cookie.path = lastIndex === 0 ? path : path.substr(0, lastIndex)\n        }\n\n        // 存入 cookie\n        const map = this.$_map\n        const cookieDomain = cookie.domain\n        const cookiePath = cookie.path\n        const cookieKey = cookie.key\n\n        if (!map[cookieDomain]) map[cookieDomain] = {}\n        if (!map[cookieDomain][cookiePath]) map[cookieDomain][cookiePath] = {}\n\n        const oldCookie = map[cookieDomain][cookiePath][cookieKey]\n        cookie.createTime = oldCookie && oldCookie.createTime || Date.now()\n\n        if (this.$_checkExpires(cookie)) {\n            // 未过期\n            map[cookieDomain][cookiePath][cookieKey] = cookie\n        } else if (oldCookie) {\n            // 存在旧 cookie，且被设置为已过期\n            delete map[cookieDomain][cookiePath][cookieKey]\n        }\n\n        // 持久化 cookie\n        if (this.cookieStore !== 'memory' && this.cookieStore !== 'globalmemory') {\n            const key = this.cookieStore === 'storage' ? `PAGE_COOKIE_${this.$_pageName}` : 'PAGE_COOKIE'\n            wx.setStorage({\n                key,\n                data: this.serialize(),\n            })\n        }\n    }\n\n    /**\n     * 拉取 cookie\n     */\n    getCookie(url, includeHttpOnly) {\n        const {\n            protocol, hostname, port, pathname\n        } = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n        const res = []\n\n        const map = this.$_map\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            // 判断 domain\n            if (this.$_checkDomain(host, domainItem)) {\n                const domainMap = map[domainItem] || {}\n                const pathList = Object.keys(domainMap)\n\n                for (const pathItem of pathList) {\n                    // 判断 path\n                    if (this.$_checkPath(path, pathItem)) {\n                        const pathMap = map[domainItem][pathItem] || {}\n\n                        Object.keys(pathMap).forEach(key => {\n                            const cookie = pathMap[key]\n\n                            if (!cookie) return\n\n                            // 判断协议\n                            if (cookie.secure && protocol !== 'https:' && protocol !== 'wss:') return\n                            if (!includeHttpOnly && cookie.httpOnly && protocol && protocol !== 'http:') return\n\n                            // 判断过期\n                            if (this.$_checkExpires(cookie)) {\n                                res.push(cookie)\n                            } else {\n                                // 过期，删掉\n                                delete map[domainItem][pathItem][key]\n                            }\n                        })\n                    }\n                }\n            }\n        }\n\n        return res\n            .sort((a, b) => {\n                const gap = a.createTime - b.createTime\n\n                if (!gap) {\n                    return a.key < b.key ? -1 : 1\n                } else {\n                    return gap\n                }\n            })\n            .map(cookie => `${cookie.key}=${cookie.value}`)\n            .join('; ')\n    }\n\n    /**\n     * 序列化\n     */\n    serialize() {\n        try {\n            return JSON.stringify(this.$_map)\n        } catch (err) {\n            console.log('cannot serialize the cookie')\n            return ''\n        }\n    }\n\n    /**\n     * 反序列化\n     */\n    deserialize(str) {\n        let map = {}\n        try {\n            map = JSON.parse(str)\n        } catch (err) {\n            console.log('cannot deserialize the cookie')\n            map = {}\n        }\n\n        // 合并 cookie\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            const domainMap = map[domainItem] || {}\n            const pathList = Object.keys(domainMap)\n\n            for (const pathItem of pathList) {\n                const pathMap = map[domainItem][pathItem] || {}\n\n                Object.keys(pathMap).forEach(key => {\n                    const cookie = pathMap[key]\n\n                    if (!cookie) return\n\n                    // 已存在则不覆盖\n                    if (!this.$_map[domainItem]) this.$_map[domainItem] = {}\n                    if (!this.$_map[domainItem][pathItem]) this.$_map[domainItem][pathItem] = {}\n                    if (!this.$_map[domainItem][pathItem][key]) this.$_map[domainItem][pathItem][key] = cookie\n                })\n            }\n        }\n    }\n}\n\nmodule.exports = Cookie\n","class Navigator {\n    constructor() {\n        this.$_language = ''\n        this.$_wxVersion = ''\n        this.$_brand = '' // 手机品牌\n        this.$_model = '' // 手机型号\n        this.$_platform = ''\n        this.$_system = '' // 操作系统版本\n\n        this.$_userAgent = ''\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_language = info.language\n        this.$_wxVersion = info.version\n        this.$_brand = info.brand\n        this.$_model = info.model\n        this.$_platform = info.platform\n        this.$_system = info.system\n\n        // 拼装 userAgent\n        const appVersion = '5.0'\n        const appleWebKitVersion = '602.3.12'\n        let platformContext\n        if (this.$_platform === 'ios') {\n            // 拆分系统版本号\n            let systemVersion = this.$_system.split(' ')\n            if (systemVersion.length >= 2) {\n                systemVersion = systemVersion[1].split('.').join('_')\n            } else {\n                systemVersion = ''\n            }\n\n            platformContext = `${this.$_brand}; CPU ${this.$_brand} OS ${systemVersion} like Mac OS X`\n        } else if (this.$_platform === 'android') {\n            platformContext = `Linux; ${this.$_system}; ${this.$_model}`\n        } else {\n            // 在开发者工具上，默认在 windows x64 上运行\n            platformContext = 'Windows NT 6.1; win64; x64'\n        }\n\n        this.$_userAgent = `${this.appCodeName}/${appVersion} (${platformContext}) AppleWebKit/${appleWebKitVersion} (KHTML, like Gecko) Mobile MicroMessenger/${this.$_wxVersion} Language/${this.language}`\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get userAgent() {\n        return this.$_userAgent\n    }\n\n    get appCodeName() {\n        return 'Mozilla'\n    }\n\n    get appName() {\n        return 'Netscape'\n    }\n\n    get language() {\n        return this.$_language\n    }\n\n    get languages() {\n        return [this.$_language]\n    }\n\n    get platform() {\n        return this.$_platform\n    }\n\n    get product() {\n        return 'Gecko'\n    }\n}\n\nmodule.exports = Navigator\n","const EventTarget = require('../event/event-target')\n\nclass Screen extends EventTarget {\n    constructor() {\n        super()\n\n        this.$_width = 0\n        this.$_height = 0\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_width = info.screenWidth\n        this.$_height = info.screenHeight\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        return this.$_width\n    }\n\n    get height() {\n        return this.$_height\n    }\n}\n\nmodule.exports = Screen\n","/**\n * 暂不维护跳转后页面的历史，不做页面刷新的操作\n */\nconst Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nclass History extends EventTarget {\n    constructor(location) {\n        super()\n\n        this.$_location = location\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: location.href,\n        }]\n        this.$_currentIndex = 0\n\n        this.$_location.addEventListener('$_addToHistory', evt => {\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n            this.$_stack.push({\n                state: null,\n                title: '',\n                url: evt.href\n            })\n        })\n    }\n\n    /**\n     * 检查是否同源\n     */\n    $_checkOrigin(url) {\n        const {protocol, hostname, port} = Location.$$parse(url)\n\n        return (!protocol || this.$_location.protocol === protocol) && (!hostname || this.$_location.hostname === hostname) && ((!hostname && !port) || this.$_location.port === port)\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset() {\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: this.$_location.href,\n        }]\n        this.$_currentIndex = 0\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get state() {\n        const current = this.$_stack[this.$_currentIndex]\n        return current && current.state || null\n    }\n\n    get length() {\n        return this.$_stack.length\n    }\n\n    back() {\n        this.go(-1)\n    }\n\n    forward() {\n        this.go(1)\n    }\n\n    go(delta) {\n        if (typeof delta === 'number') {\n            const next = this.$_currentIndex + delta\n\n            if (next >= 0 && next < this.$_stack.length && this.$_currentIndex !== next) {\n                this.$_currentIndex = next\n                // 替换 href，但不做跳转（理论上此处应该做跳转，但是在小程序环境里不适合）\n                this.$_location.$$startCheckHash()\n                this.$_location.$$setHrefWithoutCheck(this.$_stack[this.$_currentIndex].url)\n                this.$_location.$$endCheckHash(true) // 因为不跳转，所以要强制触发 hashchange 检测\n\n                this.$$trigger('popstate', {\n                    event: {\n                        state: this.state\n                    }\n                })\n            }\n        } else {\n            // 刷新当前页面\n            this.$_location.reload()\n        }\n    }\n\n    pushState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.push({state, title, url: this.$_location.href})\n        }\n    }\n\n    replaceState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.splice(this.$_currentIndex, 1, {state, title, url: this.$_location.href})\n        }\n    }\n}\n\nmodule.exports = History\n","const cache = require('../util/cache')\n\nlet pageUrlRouteMap = null\n\nclass Miniprogram {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_pageUrl = '' // 页面真实 url\n        this.$_subpackagesMap = {} // 分包名映射表\n    }\n\n    get window() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get config() {\n        return cache.getConfig()\n    }\n\n    get subpackagesMap() {\n        return this.$_subpackagesMap\n    }\n\n    /**\n     * 初始化\n     */\n    init(url) {\n        if (typeof url === 'string') this.$_pageUrl = url // 设置真实 url\n        const {\n            origin, entry, router, runtime = {}\n        } = cache.getConfig()\n        const subpackagesMap = runtime.subpackagesMap || {}\n\n        this.$_pageUrl = this.$_pageUrl || (origin + entry)\n        this.$_subpackagesMap = subpackagesMap\n        this.window.location.$$reset(this.$_pageUrl)\n        this.window.history.$$reset()\n\n        if (!pageUrlRouteMap) {\n            // 需要初始化页面 url - 小程序页面路由映射表\n            pageUrlRouteMap = {}\n\n            Object.keys(router).forEach(pageName => {\n                const regexpList = []\n\n                router[pageName].forEach(pathObj => {\n                    // 构造正则表达式\n                    const regexp = new RegExp(pathObj.regexp, pathObj.options)\n                    regexpList.push(regexp)\n                })\n\n                // 将每个页面的路由改造成函数，方便后续做匹配用\n                pageUrlRouteMap[pageName] = pathname => {\n                    for (const regexp of regexpList) {\n                        const parseRes = regexp.exec(pathname)\n                        regexp.lastIndex = 0\n\n                        if (parseRes) {\n                            // 匹配成功\n                            const packageName = subpackagesMap[pageName]\n                            return `/${packageName ? packageName + '/' : ''}pages/${pageName}/index`\n                        }\n                    }\n\n                    return null\n                }\n            })\n        }\n    }\n\n    /**\n     * 需要匹配对应路由的 route\n     */\n    getMatchRoute(pathname) {\n        const keys = Object.keys(pageUrlRouteMap)\n        for (const key of keys) {\n            const matchRes = pageUrlRouteMap[key](pathname)\n\n            if (matchRes) return matchRes // 匹配成功\n        }\n\n        return null\n    }\n\n    /**\n     * 判断是否 tabBar 页面\n     */\n    isTabBarPage(pageRoute) {\n        const {\n            runtime = {}\n        } = cache.getConfig()\n        const tabBarMap = runtime.tabBarMap || {}\n        return !!tabBarMap[pageRoute]\n    }\n}\n\nmodule.exports = Miniprogram\n","const Event = require('../event/event')\nconst cache = require('../util/cache')\n\nclass Storage {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_keys = []\n    }\n\n    /**\n     * 触发 window 的 storage 事件\n     */\n    $_triggerStorage(key, newValue, oldValue, force) {\n        if (!force && newValue === oldValue) return\n\n        const currentWindow = cache.getWindow(this.$_pageId)\n        const windowList = cache.getWindowList() || []\n        windowList.forEach(window => {\n            if (window && window !== currentWindow) {\n                window.$$trigger('storage', {\n                    event: new Event({\n                        name: 'storage',\n                        target: window,\n                        $$extra: {\n                            key,\n                            newValue,\n                            oldValue,\n                            storageArea: this,\n                            url: currentWindow.location.href,\n                        }\n                    })\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get length() {\n        return this.$_keys && this.$_keys.length || 0\n    }\n\n    key(num) {\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\n        return this.$_keys[num] || null\n    }\n}\n\nclass SessionStorage extends Storage {\n    constructor(pageId) {\n        super(pageId)\n        this.$_map = {}\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n        return this.$_map[key] || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = this.$_map[key] || null\n        this.$_map[key] = data\n\n        // 调整顺序\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n        this.$_keys.push(key)\n\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = this.$_map[key] || null\n        delete this.$_map[key]\n\n        // 删除 key\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        this.$_map = {}\n        this.$_keys.length = 0\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nclass LocalStorage extends Storage {\n    /**\n     * 更新 storage 信息\n     */\n    $_updateInfo() {\n        try {\n            const info = wx.getStorageInfoSync()\n            const windowList = cache.getWindowList() || []\n            windowList.forEach(window => {\n                if (window) {\n                    window.localStorage.$$keys = info.keys\n                }\n            })\n        } catch (err) {\n            console.warn('getStorageInfoSync fail')\n        }\n    }\n\n    set $$keys(keys) {\n        this.$_keys = keys\n    }\n\n    /**\n     * 对外属性和方法\n     */\n\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n\n        return wx.getStorageSync(key) || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.setStorageSync(key, data)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.removeStorageSync(key)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        wx.clearStorageSync()\n        this.$_updateInfo()\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nmodule.exports = {\n    SessionStorage,\n    LocalStorage,\n}\n","/**\n * 受限于小程序环境，不支持 data url 和 options 参数\n */\nconst Event = require('../event/event')\nconst EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nlet wxWorker = null\nlet wxWorkerPath = null\nlet callbackList = []\nlet sharedWorkerInstCount = 0\nconst workerMap = {}\nconst sharedWorkerMap = {}\n\n/**\n * 获取 worker 所在目录\n */\nfunction getWorkersDir() {\n    const config = cache.getConfig()\n    const generate = config.generate\n    return generate && generate.worker\n}\n\n/**\n * 获取 worker 路径\n */\nfunction getWorkerUrl(url) {\n    const fileName = url.split('/').pop()\n    return getWorkersDir() + '/' + fileName\n}\n\n/**\n * 监听 worker 消息回调\n */\nfunction onWorkerMessage(worker, callback) {\n    callbackList.push(callback)\n    if (!worker._hasRegisterCb) {\n        worker.onMessage(res => {\n            callbackList.forEach(func => func(res))\n        })\n        worker._hasRegisterCb = true\n    }\n}\n\nclass Worker extends EventTarget {\n    constructor(url, pageId, isSharedWorker) {\n        super()\n\n        const filePath = getWorkerUrl(url)\n\n        if (wxWorker) {\n            // 小程序只允许创建一个 worker 实例\n            if (!isSharedWorker || (filePath !== wxWorkerPath)) throw new Error('exceed max concurrent workers limit')\n        }\n\n        this.$_pageId = pageId\n        this.isSharedWorker = isSharedWorker\n        wxWorkerPath = filePath\n        wxWorker = wxWorker || this.$_tryCatch(() => wx.createWorker(wxWorkerPath))\n\n        if (wxWorker) {\n            this.$_onMessage = res => {\n                if (res.type === 'message' && res.pageId === this.$_pageId) {\n                    this.$$trigger('message', {\n                        event: new Event({\n                            name: 'message',\n                            target: this,\n                            $$extra: {\n                                data: res.data,\n                            },\n                        })\n                    })\n                }\n            }\n            onWorkerMessage(wxWorker, this.$_onMessage)\n\n            const navigator = {}\n            const location = {}\n            const window = cache.getWindow(this.$_pageId)\n            if (window && !isSharedWorker) {\n                ['userAgent', 'appCodeName', 'appName', 'language', 'languages', 'platform', 'product'].forEach(key => navigator[key] = window.navigator[key]);\n                ['protocol', 'host', 'hostname', 'port', 'origin', 'pathname', 'search', 'hash', 'href'].forEach(key => location[key] = window.location[key])\n            }\n            this.$_tryCatch(() => wxWorker.postMessage({\n                type: 'connect', pageId: this.$_pageId, navigator, location\n            }))\n        }\n\n        if (!this.isSharedWorker) workerMap[this.$_pageId] = this\n    }\n\n    /**\n     * 处理方法的 try catch 调用\n     */\n    $_tryCatch(func) {\n        try {\n            return func.call(this)\n        } catch (error) {\n            console.error(error)\n            this.$$trigger('error', {\n                event: new Event({\n                    name: 'error',\n                    target: this,\n                    $$extra: {\n                        error,\n                        message: error.message || '',\n                        filename: wxWorkerPath,\n                    }\n                })\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    postMessage(data) {\n        if (this.$_pageId && wxWorker) this.$_tryCatch(() => wxWorker.postMessage({type: 'message', pageId: this.$_pageId, data}))\n    }\n\n    terminate() {\n        if (this.$_pageId && wxWorker) {\n            this.$_pageId = null\n            if (!this.isSharedWorker) delete workerMap[this.$_pageId]\n            this.$_tryCatch(() => wxWorker.terminate())\n            wxWorker = null\n            wxWorkerPath = null\n            callbackList = []\n        }\n    }\n}\n\nclass SharedWorker extends EventTarget {\n    constructor(url, pageId) {\n        super()\n\n        this.$_worker = new Worker(url, pageId, true)\n        this.$_worker.close = () => {\n            sharedWorkerInstCount--\n            callbackList.splice(callbackList.indexOf(this.$_worker.$_onMessage), 1)\n            if (!sharedWorkerInstCount) this.$_worker.terminate()\n            if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].splice(sharedWorkerMap[pageId].indexOf(this), 1)\n        }\n        this.$_worker.start = () => {}\n        sharedWorkerInstCount++\n        sharedWorkerMap[pageId] = sharedWorkerMap[pageId] || []\n        sharedWorkerMap[pageId].push(this)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get port() {\n        return this.$_worker\n    }\n}\n\n/**\n * 页面删除\n */\nfunction destroy(pageId) {\n    if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].forEach(sharedWorker => sharedWorker.port.close())\n    sharedWorkerMap[pageId] = null\n    if (workerMap[pageId]) workerMap[pageId].terminate()\n    workerMap[pageId] = null\n}\n\n\nmodule.exports = {\n    Worker,\n    SharedWorker,\n    destroy,\n}\n","class Performance {\n    constructor(timeOrigin) {\n        this.$_timeOrigin = timeOrigin\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get navigation() {\n        console.warn('performance.navigation is not supported')\n        return null\n    }\n\n    get timing() {\n        console.warn('performance.timing is not supported')\n        return null\n    }\n\n    get timeOrigin() {\n        return this.$_timeOrigin\n    }\n\n    now() {\n        return +new Date() - this.$_timeOrigin\n    }\n}\n\nmodule.exports = Performance\n","const Location = require('./location')\nconst EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nconst SUPPORT_METHOD = ['OPTIONS', 'GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'TRACE', 'CONNECT']\nconst STATUS_TEXT_MAP = {\n    100: 'Continue',\n    101: 'Switching protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Suitable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\nclass XMLHttpRequest extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_method = ''\n        this.$_url = ''\n        this.$_data = null\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.UNSENT\n        this.$_header = {\n            Accept: '*/*'\n        }\n        this.$_responseType = ''\n        this.$_resHeader = null\n        this.$_response = null\n        this.$_timeout = 0\n        this.$_startTime = null\n        this.$_withCredentials = true // 向前兼容，默认为 true\n\n        this.$_requestTask = null\n        this.$_requestSuccess = this.$_requestSuccess.bind(this)\n        this.$_requestFail = this.$_requestFail.bind(this)\n        this.$_requestComplete = this.$_requestComplete.bind(this)\n    }\n\n    /**\n     * readyState 变化\n     */\n    $_callReadyStateChange(readyState) {\n        const hasChange = readyState !== this.$_readyState\n        this.$_readyState = readyState\n\n        if (hasChange) this.$$trigger('readystatechange')\n    }\n\n    /**\n     * 执行请求\n     */\n    $_callRequest() {\n        const window = cache.getWindow(this.$_pageId)\n        if (!window || !window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        if (this.$_timeout) {\n            this.$_startTime = +new Date()\n\n            setTimeout(() => {\n                if (!this.$_status && this.$_readyState !== XMLHttpRequest.DONE) {\n                    // 超时\n                    if (this.$_requestTask) this.$_requestTask.abort()\n                    this.$_callReadyStateChange(XMLHttpRequest.DONE)\n                    this.$$trigger('timeout')\n                }\n            }, this.$_timeout)\n        }\n\n        // 重置各种状态\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.OPENED\n        this.$_resHeader = null\n        this.$_response = null\n\n        // 补完 url\n        let url = this.$_url\n        url = url.indexOf('//') === -1 ? window.location.origin + url : url\n\n        // 头信息\n        const header = Object.assign({}, this.$_header)\n        header.cookie = window.document.$$cookie\n        if (!this.withCredentials) {\n            // 不同源，要求 withCredentials 为 true 才携带 cookie\n            const {origin} = Location.$$parse(url)\n            if (origin !== window.location.origin) delete header.cookie\n        }\n\n        this.$_requestTask = wx.request({\n            url,\n            data: this.$_data || {},\n            header,\n            method: this.$_method,\n            dataType: this.$_responseType === 'json' ? 'json' : 'text',\n            responseType: this.$_responseType === 'arraybuffer' ? 'arraybuffer' : 'text',\n            success: this.$_requestSuccess,\n            fail: this.$_requestFail,\n            complete: this.$_requestComplete,\n        })\n    }\n\n    /**\n     * 请求成功\n     */\n    $_requestSuccess({data, statusCode, header}) {\n        const window = cache.getWindow(this.$_pageId)\n        if (!window || !window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        this.$_status = statusCode\n        this.$_resHeader = header\n\n        this.$_callReadyStateChange(XMLHttpRequest.HEADERS_RECEIVED)\n\n        // 处理 set-cookie\n        if (window) {\n            const setCookie = header['Set-Cookie']\n\n            if (setCookie && typeof setCookie === 'string') {\n                window.document.$$setCookie(setCookie)\n            }\n        }\n\n        // 处理返回数据\n        if (data) {\n            this.$_callReadyStateChange(XMLHttpRequest.LOADING)\n            this.$$trigger('loadstart')\n            this.$_response = data\n            this.$$trigger('loadend')\n        }\n    }\n\n    /**\n     * 请求失败\n     */\n    $_requestFail({errMsg}) {\n        this.$_status = 0\n        this.$_statusText = errMsg\n\n        this.$$trigger('error')\n    }\n\n    /**\n     * 请求完成\n     */\n    $_requestComplete() {\n        this.$_startTime = null\n        this.$_requestTask = null\n        this.$_callReadyStateChange(XMLHttpRequest.DONE)\n\n        if (this.$_status) {\n            this.$$trigger('load')\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get timeout() {\n        return this.$_timeout\n    }\n\n    set timeout(timeout) {\n        if (typeof timeout !== 'number' || !isFinite(timeout) || timeout <= 0) return\n\n        this.$_timeout = timeout\n    }\n\n    get status() {\n        return this.$_status\n    }\n\n    get statusText() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED) return ''\n\n        return STATUS_TEXT_MAP[this.$_status + ''] || this.$_statusText || ''\n    }\n\n    get readyState() {\n        return this.$_readyState\n    }\n\n    get responseType() {\n        return this.$_responseType\n    }\n\n    set responseType(value) {\n        if (typeof value !== 'string') return\n\n        this.$_responseType = value\n    }\n\n    get responseText() {\n        if (!this.$_responseType || this.$_responseType === 'text') {\n            return this.$_response\n        }\n\n        return null\n    }\n\n    get response() {\n        return this.$_response\n    }\n\n    get withCredentials() {\n        return this.$_withCredentials\n    }\n\n    set withCredentials(value) {\n        this.$_withCredentials = !!value\n    }\n\n    abort() {\n        if (this.$_requestTask) {\n            this.$_requestTask.abort()\n            this.$$trigger('abort')\n        }\n    }\n\n    getAllResponseHeaders() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return ''\n\n        return Object.keys(this.$_resHeader)\n            .map(key => `${key}: ${this.$_resHeader[key]}`)\n            .join('\\r\\n')\n    }\n\n    getResponseHeader(name) {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return null\n\n        // 处理大小写不敏感\n        const key = Object.keys(this.$_resHeader).find(item => item.toLowerCase() === name.toLowerCase())\n        const value = key ? this.$_resHeader[key] : null\n\n        return typeof value === 'string' ? value : null\n    }\n\n    open(method, url) {\n        if (typeof method === 'string') method = method.toUpperCase()\n\n        if (SUPPORT_METHOD.indexOf(method) < 0) return\n        if (!url || typeof url !== 'string') return\n\n        this.$_method = method\n        this.$_url = url\n\n        this.$_callReadyStateChange(XMLHttpRequest.OPENED)\n    }\n\n    setRequestHeader(header, value) {\n        if (typeof header === 'string' && typeof value === 'string') {\n            this.$_header[header] = value\n        }\n    }\n\n    send(data) {\n        if (this.$_readyState !== XMLHttpRequest.OPENED) return\n\n        this.$_data = data\n        this.$_callRequest()\n    }\n}\n\nXMLHttpRequest.UNSENT = 0\nXMLHttpRequest.OPENED = 1\nXMLHttpRequest.HEADERS_RECEIVED = 2\nXMLHttpRequest.LOADING = 3\nXMLHttpRequest.DONE = 4\n\nmodule.exports = XMLHttpRequest\n"],"sourceRoot":""}